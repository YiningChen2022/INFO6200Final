/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.neu.csye6200.View;

import edu.neu.csye6200.Object.Classroom;
import edu.neu.csye6200.Controller.DataStore;
import edu.neu.csye6200.Controller.FileUtil;
import edu.neu.csye6200.Object.Group;
import edu.neu.csye6200.Object.Immunization;
import edu.neu.csye6200.Object.Student;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author chenyu
 */
public class StudentManagementPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentManagementPanel
     */
    private JPanel userProcessContainer;
    private DataStore dataStore;
    int expirationState = 2;


    public StudentManagementPanel() {

    }

    public StudentManagementPanel(JPanel userProcessContainer, DataStore dataStore) {
        initComponents();//To change body of generated methods, choose Tools | Templates.
        this.userProcessContainer = userProcessContainer;
        this.dataStore = dataStore;
        populate();
        alert();
        
       
         
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnStuRegister = new javax.swing.JButton();
        btnStuDelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnStuChange = new javax.swing.JButton();
        annualRegistrationBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Name", "Age(Months)", "Phone Number", "address", "ParentName", "Registerdate", "Birthday"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(6, 118, 839, 251);

        jLabel3.setText("Student ID:");
        add(jLabel3);
        jLabel3.setBounds(65, 443, 70, 16);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(147, 438, 158, 26);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch);
        btnSearch.setBounds(335, 438, 85, 29);

        btnStuRegister.setText("New Student Register");
        btnStuRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuRegisterActionPerformed(evt);
            }
        });
        add(btnStuRegister);
        btnStuRegister.setBounds(579, 407, 221, 29);

        btnStuDelete.setText("Delete Student Record");
        btnStuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuDeleteActionPerformed(evt);
            }
        });
        add(btnStuDelete);
        btnStuDelete.setBounds(579, 454, 221, 29);

        jButton4.setText("<< Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(26, 517, 97, 29);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 100));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Students Registration List");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addContainerGap(542, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(37, 37, 37))
        );

        add(jPanel1);
        jPanel1.setBounds(0, 0, 851, 100);

        btnStuChange.setText("Change Student Information");
        btnStuChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuChangeActionPerformed(evt);
            }
        });
        add(btnStuChange);
        btnStuChange.setBounds(579, 501, 221, 29);

        annualRegistrationBtn.setText("Annual registration");
        annualRegistrationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annualRegistrationBtnActionPerformed(evt);
            }
        });
        add(annualRegistrationBtn);
        annualRegistrationBtn.setBounds(579, 548, 221, 29);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/neu/csye6200/View/icon/back.jpg"))); // NOI18N
        add(jLabel5);
        jLabel5.setBounds(0, 96, 1000, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnStuRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuRegisterActionPerformed
        // TODO add your handling code here:
        StudentRegisterPanel panel = new StudentRegisterPanel(userProcessContainer, dataStore);
        userProcessContainer.add("studentRegisterJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnStuRegisterActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try {

            int stuid = Integer.parseInt(jTextField1.getText());

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            for (Student stu : dataStore.getStuList()) {
                if ( stu.getStuID() == stuid) {
                    Object row[] = new Object[7];
                    row[0] = stu;
                    row[1] = stu.getFirstName() + " " + stu.getLastName();
                    row[2] = stu.getAge();
                    row[5] = stu.getParentFirstName() + " " + stu.getParentLastName();
                    row[4] = stu.getAddress();
                    row[3] = stu.getPhoneNumber();
                    row[6] = stu.getRegisterDate();
                    dtm.addRow(row);
                }
            }

        } catch (NumberFormatException ex) {

        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnStuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Student stu = (Student) jTable1.getValueAt(selectedRow, 0);
            stu.setRegisterState(false);
            for (Classroom c : dataStore.getClassroomList()) {
                if (c.getClassId() == stu.getClassID()) {
                    c.setStuClassroomCount(c.getStuClassroomCount() - 1);
                }
            }
            for (Group g : dataStore.getGroupList()) {
                if (g.getGroupID() == stu.getGroupID()) {
                    g.setCount(g.getCount() - 1);
                }
            }
            dataStore.getStuList().remove(stu);
            FileUtil.writeCsv();
            JOptionPane.showMessageDialog(null, "Delete Successsfully");
            populate();

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first.", "Warning!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnStuDeleteActionPerformed

    private void btnStuChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuChangeActionPerformed
        // TODO add your handling code here:

        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Student s = (Student) jTable1.getValueAt(selectedRow, 0);
            StudentChangePanel panel = new StudentChangePanel(userProcessContainer, dataStore, s);
            userProcessContainer.add("studentChangeJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "warning", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnStuChangeActionPerformed

    private void annualRegistrationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annualRegistrationBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Student s = (Student) jTable1.getValueAt(selectedRow, 0);
            StudentChangePanel panel = new StudentChangePanel(userProcessContainer, dataStore, s);
            userProcessContainer.add("studentChangeJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_annualRegistrationBtnActionPerformed

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        for (Student stu : dataStore.getStuList()) {
            Object row[] = new Object[8];
                row[0] = stu;
                row[1] = stu.getFirstName() + " " + stu.getLastName();
                row[2] = stu.getAge();
                row[5] = stu.getParentFirstName() + " " + stu.getParentLastName();
                row[4] = stu.getAddress();
                row[3] = stu.getPhoneNumber();
                row[6] = stu.getRegisterDate();
                row[7] = stu.getBirthday();
                
                dtm.addRow(row);
            jTable1.setDefaultRenderer(Object.class, new TableCellRenderer() {
            private DefaultTableCellRenderer DEFAULT_RENDERER = new DefaultTableCellRenderer();

            @Override
            public Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = DEFAULT_RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (column == 0) {
                    System.out.println(value);
                    Student s = (Student) value;
                    
                    if(checkExpired(s)==1){
                        s.setRegisterState(false);
                    }else{
                        s.setRegisterState(true);
                    }
                    
                    if (!s.isRegisterState()) {
                        c.setBackground(Color.RED);
                    } else {
                        c.setBackground(Color.WHITE);
                    }
                }
                return c;
            }

        });
        }

    }
    
    public void alert() {
        annualRegistrationBtn.setEnabled(false);
        jTable1.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
        if(e.getClickCount()==1)
        { int selectedRow=jTable1.getSelectedRow();
          if (selectedRow >= 0) {
            Student stu = (Student) jTable1.getValueAt(selectedRow, 0);
            switch (checkExpired(stu)) {
                case 0:
                    expirationState = 0;
                    break;
                case 1:
                    expirationState = 1;
                    break;
                default:
                    expirationState = 2;
                    break;
            }
            if (expirationState == 0) {
            JOptionPane.showMessageDialog(null, "Annually re-registration comes in 7 days");
            annualRegistrationBtn.setEnabled(false);
            }
            if (expirationState == 1) {
            JOptionPane.showMessageDialog(null, "Student should register again!");
            annualRegistrationBtn.setEnabled(true);
            }
            if (expirationState == 2){
            JOptionPane.showMessageDialog(null, "Student's registration is still valid");
            annualRegistrationBtn.setEnabled(false);    
            }
        }

        }   
        }
        });
    }
    
    private Date getCurrentRegistrationDate(String currentRegistrationDate) {
        SimpleDateFormat ft = new SimpleDateFormat("M/dd/yyyy");
        Date date = null;
        try {
            date = ft.parse(currentRegistrationDate);
        } catch (ParseException e) {
            System.out.println(e.getMessage());
        }
        return date;
    }
    
    private int calculateDateInterval(String t1){
        Date d1 = getCurrentRegistrationDate(t1);
        Date d2 = new Date();
        long l1 = d1.getTime();
        long l2 = d2.getTime();
        return (int)((l2 - l1) / (1000 * 60 * 60 * 24));
    }
    
    private int checkExpired(Student s) {
        String currentRegistrationDate = s.getRegisterDate();
        if (358<=calculateDateInterval(currentRegistrationDate)&&calculateDateInterval(currentRegistrationDate)<365){
            return 0;
        }
        else if (365<=calculateDateInterval(currentRegistrationDate)){
            return 1;
        }
        return 2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annualRegistrationBtn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnStuChange;
    private javax.swing.JButton btnStuDelete;
    private javax.swing.JButton btnStuRegister;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
